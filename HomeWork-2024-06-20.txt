CHALLENGEs are OPTIONAL

00. Create directory panda/your_name/hw/hw-2024-06-20
00. Create directory panda/your_name/projects/<your-nodejs-mysql>
00. Create directory panda/your_name/projects/09-calculator etc.

0. Projects
   00-portfolio - get some ideas, what do you want 
   00-tic-tac-toe - 30.04.2024
   01-is-it-a-prime-number - 30.04.2024
   02-css-explanator - 30.04.2024
   03-questionnaire - 8.05.2024
   04-binary-guessing - 16.05.2024 - small groups
   05-string-games - "fix the clock","random quote",
       "palindrome", "gematria", "anagrams" parts
       and the last part - "words-in-word" - finish the project - 26.06.2024
   06-nim - 23.05.2024 - small groups
   07-hangman - 5.06.2024 - small groups
         with both "mouse click" and "keyboard" events,
         with minimum of the listeners - using
                         event propagation

   08-NodeJS-SQL-Your-Theme - continue with your theme
                           in accordance to the cookbook02.
                           See exercises 1. and 2. below.
                           19.06.2024

   09-calculator - 16.06.2024 - build it with css GRID,
          use both "mouse click" and "keyboard" events,
          with minimum of the listeners - using
                         event propagation.
          It should perform the actions: +,-,*,/,%,power,
          root, factorial, translating number from binary 
          to decimal, from decimal to binary, from hexadecimal
          to decimal, from decimal to hexadecimal.
          Optionally: translating numbers from decimal to 
          roman and from roman to decimal.
          Optionally - more functions.
      This project will be evaluated for the themes of:
        "algorithms and advanced DOM".

   Optional Projects:
      - Canvas "Breakout Game"
      - "Endless Dangers" - see the description below
      - "Dreidel"
      - "Memory Game" - see the beginning files and 
          the example of how to flip card inside 
          the "projects/optional/memory-game" dir
      - "Math Practice" - Optional project of math-practice 
         with drops containing math exercises and 
         going down. 
         When the player types right answer, 
         the drop should stop or disappear or 
         make some other response. 
      - "One page site with smooth scrolling" - like YummyIsrael


1. In parallel with our project Yummy 
   finish your own project 
   08-NodeJS-SQL-Your-Theme - 
   deploy it to the hosting.
   Use Cookbook002 last steps.
   This project is getting evaluated for the theme of 
   "Basic NodeJS Express MVC CRUD API"

2. Finish the project STRING GAMES - code the last 
   part of it: "words in word" game - see
   the explanation in the "projects" dir.  

3. React. Use TODO.
   a) Create there new component BigButton.

   b) This component should get props: isDark, txt, whatItDoes.

   c) This component should render <div> where there are text 
   of "whatItDoes" in small letters and
   below the text of the explanation the <button> itself.

   d) The button should contain "txt".

   e) Depending on if "isDark" true or false the button should 
   get dark background and light text color or vice versa.

   f) Use "style" object and css to style the component

   g) In App.jsx use BigButton component to create 2 buttons:

      "Change Color" and "Change App Title"

4. Recursion.
   a) Like the previous hw exercise, but  with a change.
      Make a function that gets a number 
      and finds the sum of all the even numbers from 2
      to this number 

   b) Make a function that gets a number 
      and creates a string from this number till 1
      like 5 4 3 2 1

   c) Like b but more complicated: 5 4 3 2 1 2 3 4 5

   d) const ar8 = []
      const ar9 = ['hello']
      const ar10 = ['green','green']
      const ar11 = ['green','blue']
      const ar12 = ['blue','blue','sun','sun','earth','earth','window','window',10,10,1024,1024]
      const ar13 = ['blue','blue','sun','sun','earth','earth','wall','window',10,10,1024,1024]
      const ar14 = ['blue','blue','sun','sun','earth','earth','window','window',10,10,1024]

      Create a function that checks that the given array
      is comprised of the pairs of the same elements.

      Think what whould you do for any array with an odd number
      of elements ...