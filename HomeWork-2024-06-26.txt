CHALLENGEs are OPTIONAL

00. Create directory panda/your_name/hw/hw-2024-06-20
00. Create directory panda/your_name/projects/<your-nodejs-mysql>
00. Create directory panda/your_name/projects/09-calculator etc.

0. Projects
   00-portfolio - get some ideas, what do you want 
   00-tic-tac-toe - 30.04.2024
   01-is-it-a-prime-number - 30.04.2024
   02-css-explanator - 30.04.2024
   03-questionnaire - 8.05.2024
   04-binary-guessing - 16.05.2024 - small groups
   05-string-games - "fix the clock","random quote",
       "palindrome", "gematria", "anagrams" parts
       and the last part - "words-in-word" - finish the project - 26.06.2024
   06-nim - 23.05.2024 - small groups
   07-hangman - 5.06.2024 - small groups
         with both "mouse click" and "keyboard" events,
         with minimum of the listeners - using
                         event propagation

   08-NodeJS-SQL-Your-Theme - continue with your theme
                           in accordance to the cookbook02.
                           See exercises 1. and 2. below.
                           19.06.2024

   09-calculator - 16.06.2024 - build it with css GRID,
          use both "mouse click" and "keyboard" events,
          with minimum of the listeners - using
                         event propagation.
          It should perform the actions: +,-,*,/,%,power,
          root, factorial, translating number from binary 
          to decimal, from decimal to binary, from hexadecimal
          to decimal, from decimal to hexadecimal.
          Optionally: translating numbers from decimal to 
          roman and from roman to decimal.
          Optionally - more functions.
      This project will be evaluated for the themes of:
        "algorithms and advanced DOM".

   Optional Projects:
      - Canvas "Breakout Game"
      - "Endless Dangers" - see the description below
      - "Dreidel"
      - "Memory Game" - see the beginning files and 
          the example of how to flip card inside 
          the "projects/optional/memory-game" dir
      - "Math Practice" - Optional project of math-practice 
         with drops containing math exercises and 
         going down. 
         When the player types right answer, 
         the drop should stop or disappear or 
         make some other response. 
      - "One page site with smooth scrolling" - like YummyIsrael


1. Practice the exercises that Alina have sent

2. Continue TODO according to the missions
   in App.jsx, TodoList.jsx and TodoItem.jsx.
   Tomorrow we're finishing it.

3. Create choose-a-user React app. See HW_useContext_example.png
   
   a) Get App-choose-a-user.jsx
   b) You may distribute the components into different files or leave them in the same file
   c) Convert userName of App to state
   d) Create Context and add userName and users to the Context
   e) At UserInfo get userName and users from the Context and show the info about the user
   f) Create in App function that changes the userName and add it to the context
   g) Get the above function from the Context at SelectUser and use it onChange 
      to change the current user and it's info
   h) Make each entry in users object be object too and use more details for
      each user, for example
        const users = {
                  Aquaman: {name: "Arthur Curry", face: "üê¨"},
                  Batman: {name: "Bruce Wayne", face: "ü¶á"},
                  Spiderman: {name: "Peter Parker", face: "üï∏"},
                  Superman: {name: "Clark Kent", face: "ü¶∏‚Äç‚ôÇÔ∏è"},
                  Wonderwoman: {name: "Princess Diana of Themyscira", face: "üë∏"}
               }
   i) Make SelectUser component not hard-coded but get from the context 
      "users" and build it
